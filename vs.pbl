define Start(lPar)
{
    gWin <- MakeWindow()
    gSleepEasy <- 1
    if(gSubNum + "" == "0")
    {
        gSubNum <- GetSubNum(gWin)
    }

    csvHeader <- "subNum,image,time,timestamp"
    gFileOut <- GetNewDataFile(gSubNum, gWin, "vs", "csv", csvHeader)

    ## Instructions
    instWidth <- 800
    instHeight <- 200
    inst <- EasyTextBox("", gVideoWidth / 2 - instWidth / 2, 75, gWin, 24, instWidth, instHeight)
    inst.text <- "Das ist die Anleitung. DrÃ¼cken Sie eine beliebige Taste um mit dem Experiment zu beginnen."
    Draw()
    WaitForAnyKeyPress()
    Hide(inst)

    ## Create task label and canvas
    gTaskLabel <- EasyLabel("", gVideoWidth / 2, 75, gWin, 24)
    gCanvas <- MakeCanvas(800, 800, MakeColor("white"))
    AddObject(gCanvas, gWin)
    Move(gCanvas, gVideoWidth / 2, gVideoHeight / 2)
    Draw()

    ## Trials
    trialsDefnFile <- "trialdefn.csv"
    trialsDefn <- ReadCSV(trialsDefnFile)

    loop(trialDefn, trialsDefn)
    {
        task <- Nth(trialDefn, 1)
        imageName <- Nth(trialDefn, 2)
        Trial(task, imageName)
    }
}

define Trial(task, imageName)
{
    ResetCanvas(gCanvas)
    Hide(gCanvas)
    gTaskLabel.text <- task
    Draw()
    Wait(3000)

    image <- MakeImage(imageName)
    AddObject(image, gCanvas)
    Move(image, gCanvas.width / 2, gCanvas.height / 2)

    Show(gCanvas)
    Draw()
    t1 <- GetTime()
    WaitforKeyPress(" ")
    t2 <- GetTime()

    FilePrint(gFileOut, MakeCSVLine(imageName, t2 - t1))
}

define MakeCSVLine(trial, time)
{
    return gSubNum + ","  + trial + "," + time + "," + TimeStamp()
}

define RemoveObjects(list,object)
{
    loop(i,list)
    {
        RemoveObject(i,object)
    }
}
